#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick-tap-ms = <200>; };

&mt { quick-tap-ms = <200>; };

/ {
    conditional_layers { compatible = "zmk,conditional-layers"; };

    combos {
        compatible = "zmk,combos";

        left-rectangle {
            bindings = <&kp LC(LA(LEFT))>;
            key-positions = <38 39 16>;
        };

        right-rectangle {
            bindings = <&kp LA(LC(RIGHT))>;
            key-positions = <38 39 19>;
        };

        pwd {
            bindings = <&pwd>;
            key-positions = <12 23>;
        };
    };

    macros {
        pwd: pwd {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(F) &kp LS(T) &kp LS(W) &kp N2 &kp N0 &kp N2 &kp N1 &kp DLLR>;
            label = "PWD";
        };
    };

    behaviors {
        bb: bb {
            compatible = "zmk,behavior-hold-tap";
            label = "BB";
            bindings = <&bt>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TAB                  &kp Q  &kp W    &kp F        &kp P               &kp B         &kp J          &kp L      &kp U              &kp Y         &kp SEMICOLON  &kp ESC
&bb BT_NXT LEFT_BRACKET  &kp A  &kp R    &kp S        &kp T               &kp G         &kp M          &kp N      &kp E              &kp I         &kp O          &kp SQT
&kp LEFT_SHIFT           &kp Z  &lt 1 X  &lt 2 C      &lt 3 D             &kp V         &kp K          &lt 3 H    &lt 2 COMMA        &lt 1 PERIOD  &kp FSLH       &kp RIGHT_ALT
                                         &lt RSE TAB  &mt LEFT_ALT ENTER  &kp LEFT_GUI  &kp BACKSPACE  &kp SPACE  &kp RIGHT_CONTROL
            >;
        };

        lower_layer {
            bindings = <
&mt LGUI F1     &kp F2    &kp F3  &kp F4    &kp F5    &kp F6     &kp F7     &kp F8          &kp UP_ARROW  &kp F10    &kp F11   &kp F12
&mt LCTRL PLUS  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT  &kp CARET  &kp LEFT_ARROW  &kp DOWN      &kp RIGHT  &kp RPAR  &mt RCTRL MINUS
&mt LALT EQUAL  &kp N1    &kp N2  &kp N3    &kp N4    &kp N5     &kp N6     &kp N7          &kp F9        &kp N9     &kp N0    &kp RALT
                                  &trans    &trans    &trans     &trans     &trans          &trans
            >;
        };

        num-pad {
            bindings = <
&kp GRAVE        &kp DEL    &kp A      &kp A      &kp A      &kp A         &kp FSLH   &kp N7        &kp N8        &kp N9        &kp MINUS   &kp CLCK
&mt LCTRL EQUAL  &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT   &kp LS(EXCL)  &kp N1     &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp PLUS    &kp EQUAL
&kp LALT         &kp LG(Z)  &kp LG(X)  &kp LG(C)  &kp LG(V)  &kp LG(S)     &kp COMMA  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PERIOD  &kp ENTER
                                       &trans     &trans     &trans        &trans     &trans        &kp N0
            >;
        };

        adjust_layer {
            bindings = <
&bootloader  &none         &none         &none         &none         &none         &none         &none         &none         &none     &none     &bootloader
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_SEL 4  &kp LS(LPAR)  &kp LS(RPAR)  &kp LBKT  &kp RBKT  &trans
&none        &none         &none         &none         &none         &none         &none         &none         &none         &none     &none     &sys_reset
                                         &trans        &none         &trans        &none         &trans        &trans
            >;
        };

        gaming {
            bindings = <
&kp ESCAPE  &none   &kp Q   &kp W   &kp I   &kp P      &none   &none   &trans  &trans  &trans  &trans
&to 0       &none   &kp A   &kp S   &kp D   &kp H      &trans  &trans  &trans  &trans  &trans  &trans
&kp LALT    &kp N0  &kp N1  &kp N2  &kp N3  &kp N4     &trans  &trans  &trans  &trans  &trans  &trans
                            &trans  &trans  &kp SPACE  &trans  &trans  &trans
            >;
        };
    };
};
